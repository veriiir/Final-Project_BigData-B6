services:
  # ===== Kafka single-node KRaft mode =====
  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka-1
    environment:
      - KAFKA_KRAFT_CLUSTER_ID=q0KiQbaPRIaY5lq07w6wxA
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_BROKER_ID=1
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
    healthcheck:
      test:
        [
          "CMD",
          "kafka-topics.sh",
          "--bootstrap-server",
          "localhost:9092",
          "--list",
        ]
      interval: 10s
      timeout: 5s
      retries: 10

  # ===== MinIO =====
  minio:
    image: minio/minio:RELEASE.2024-05-28T17-19-04Z
    container_name: minio-1
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000" # API
      - "9001:9001" # Console
    volumes:
      - minio-data:/data

  # ===== Python Kafka â†’ Parquet Processor =====
  python-processor:
    build:
      context: .
      dockerfile: Dockerfile.processor
    container_name: python-processor
    depends_on:
      kafka:
        condition: service_healthy
      minio:
        condition: service_started
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_SRC_TOPIC: fashion-products
      S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      S3_BUCKET: fashion-lakehouse
      BATCH_SIZE: 100
    volumes:
      - ./processor:/app

  # ===== Streamlit Dashboard =====
  streamlit:
    image: python:3.11-slim
    container_name: streamlit
    working_dir: /app
    command: >
      bash -c "pip install --no-cache-dir -r requirements.txt &&
               streamlit run streamlit_app/app.py --server.port 8501 --server.address 0.0.0.0"
    ports:
      - "8501:8501"
    volumes:
      - ./:/app
    depends_on:
      minio:
        condition: service_started

volumes:
  minio-data:
